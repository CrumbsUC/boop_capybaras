import type { PaymentProduct320SpecificDataJSON, PaymentProductSpecificInputs, PaymentProductContext } from './types';
export declare class GooglePay {
    private _paymentProductSpecificInputs;
    private _context?;
    private _networks;
    private _paymentsClient?;
    private _gateway;
    isGooglePayAvailable(context: PaymentProductContext, paymentProductSpecificInputs: PaymentProductSpecificInputs, googlePayData: PaymentProduct320SpecificDataJSON): Promise<boolean>;
    isMerchantIdProvided(paymentProductSpecificInputs?: PaymentProductSpecificInputs): boolean;
    /**
     * Only base is needed to trigger isReadyToPay
     */
    private _getBaseCardPaymentMethod;
    private _getTokenizationSpecification;
    /**
     * To prefetch payment data we need base + tokenizationSpecification
     */
    private _getCardPaymentMethod;
    private _getTransactionInfo;
    private _getMerchantInfo;
    private _getGooglePaymentDataRequest;
    private _getGooglePaymentDataRequestForPrefetch;
    private _getGooglePaymentsClient;
    /**
     * Prefetch payment data to improve performance
     * @see {@link https://developers.google.com/pay/api/web/reference/client#prefetchPaymentData|prefetchPaymentData()}
     */
    private _prefetchGooglePaymentData;
}
